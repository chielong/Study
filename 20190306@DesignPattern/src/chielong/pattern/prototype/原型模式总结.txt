原型模式适用场景
    1.类初始化消耗资源较多
    2.new产生的一个对象需要非常繁琐的过程(数据准备、权限访问)
    3.构造函数比较复杂
    4.循环体中产生大量对象时，可读性下降
    原型模式就是如何快速构建对象的方法总结
    简单工厂将getter/setter封装到某个方法中
    JDK提供的实现Cloneable接口，实现快速复制

scope="prototype"

浅克隆的问题
    隐患!
    赋值对象的值(注意，不是指针!)

深克隆
    any thing is new.
    存在的问题?
        可能会出现单例被破坏的问题

和单例模式唱反调
所以单例模式

BeanUtils.copy()
JSON.parseObject()